CREATE TABLE INSTRUCTORS(
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(50) NOT NULL,
    DESIGNATION VARCHAR(50) NOT NULL,
    COMPANY VARCHAR(50) NOT NULL,
    LINKEDIN VARCHAR(50) NOT NULL,
    ABOUT VARCHAR(250) NOT NULL
);

CREATE TABLE COURSES(
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL,
    DESCRIPTION VARCHAR(250) NOT NULL,
    STATUS INTEGER NOT NULL,
    START_DATE DATE CHECK (START_DATE > CURRENT_DATE),
    DURATION VARCHAR(50) NOT NULL,
    HRS_DAY VARCHAR(50) NOT NULL,
    PRICE VARCHAR(50) NOT NULL,
    MAX_SEATS INTEGER NOT NULL,
    INSTRUCTOR_ID INTEGER NOT NULL,
    FOREIGN KEY (INSTRUCTOR_ID) REFERENCES INSTRUCTORS(ID)
);

CREATE TABLE USERS(
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(50) NOT NULL
);

CREATE TABLE COMMENTS(
    ID SERIAL PRIMARY KEY,
    COMMENT VARCHAR(250) NOT NULL
);

CREATE TABLE COMMENTS_ENROLLED(
    COURSE_ID INTEGER NOT NULL,
    LEAD_ID INTEGER NOT NULL,
    COMMENT_ID INTEGER NOT NULL,
    FOREIGN KEY (COURSE_ID) REFERENCES COURSES(ID),
    FOREIGN KEY (LEAD_ID) REFERENCES USERS(ID),
    FOREIGN KEY (COMMENT_ID) REFERENCES COMMENTS(ID)
);

CREATE TABLE ANSWERS(
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(50) NOT NULL,
    PHONE VARCHAR(10) NOT NULL,
    LINKEDIN VARCHAR(50) NOT NULL
);

CREATE TABLE ENROLLED(
    COURSE_ID INTEGER NOT NULL,
    LEAD_ID INTEGER NOT NULL,
    STATUS INTEGER NOT NULL,
    ANSWER_ID INTEGER NOT NULL,
    FOREIGN KEY (COURSE_ID) REFERENCES COURSES(ID),
    FOREIGN KEY (LEAD_ID) REFERENCES USERS(ID),
    FOREIGN KEY (ANSWER_ID) REFERENCES ANSWERS(ID),
    UNIQUE (COURSE_ID, LEAD_ID)
);